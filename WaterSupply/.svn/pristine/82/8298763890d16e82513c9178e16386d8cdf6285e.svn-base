package com.watersupply.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.watersupply.entity.UsUser;
import com.watersupply.service.UsUsersService;

@Controller
@RequestMapping("/userAction")
public class UsUsersController {
	
	private List<UsUser> list ;
	public List<UsUser> getList() {
		return list;
	}
	public void setList(List<UsUser> list) {
		this.list = list;
	}
	
	
	@Autowired
	private UsUsersService usUsersControl;
	
	@RequestMapping("/getAll")
	@ResponseBody
	public List<UsUser> getAllUsUser(@RequestParam("type")String type,HttpServletResponse response) throws IOException{
		list = new ArrayList<UsUser>();
		if (type.equals("给所有用户发送")) {
			list = usUsersControl.getAll();
		}
		if (type.equals("只给欠费用户发送")) {
			list = usUsersControl.getUserQF();
		}
		return list;
	}
	
	@RequestMapping("/getUsers")
	public String getUsers(HttpServletRequest request){
			list = usUsersControl.getAll();
			for (UsUser usUser : list) {
				System.out.println(usUser.getUserName());
			}
			request.setAttribute("list", list);
			
		return "/page/user_sendMsg.jsp";
	}
	
	
	@RequestMapping("/getUserBy")
	@ResponseBody
	public UsUser getUserBy(@RequestParam("no")String uNo,@RequestParam("name")String uName,@RequestParam("jm")String jm,@RequestParam("phone")String phone,@RequestParam("address")String address) throws IOException{
		System.out.println(uName);
		UsUser user = new UsUser();
		if (uNo=="") {
			uNo=null;
		}
		if (uName=="") {
			uName=null;
		}
		if (jm=="") {
			jm=null;
		}
		if (phone=="") {
			phone=null;
		}
		if (address=="") {
			address=null;
		}
		user.setUserNo(uNo);
		user.setUserName(uName);
		user.setAbc(jm);
		user.setPhone(phone);
		user.setAddress(address);
		UsUser u = usUsersControl.getUserBy(user);
		return u;
		
	}
	
	
	
	@RequestMapping("/xh")
	@ResponseBody
	public String xh(@RequestParam("no")String no) throws IOException{
		System.out.println("into...");
		int count = usUsersControl.xh(no);
		if (count>0) {
			return "销户成功";
		}else{
			return  "销户失败";
		}
		
	}
	
	

	//档案号管理查询
	@RequestMapping("/getUserby")
	@ResponseBody
	public UsUser getUserby(@RequestParam("no")String uNo,@RequestParam("name")String uName,@RequestParam("jm")String jm,@RequestParam("phone")String phone,@RequestParam("address")String address) throws IOException{
		System.out.println(uName);
		UsUser user = new UsUser();
		if (uNo=="") {
			uNo=null;
		}
		if (uName=="") {
			uName=null;
		}
		if (jm=="") {
			jm=null;
		}
		if (phone=="") {
			phone=null;
		}
		if (address=="") {
			address=null;
		}
		user.setUserNo(uNo);
		user.setUserName(uName);
		user.setAbc(jm);
		user.setPhone(phone);
		user.setAddress(address);
		UsUser u = usUsersControl.getUserby(user);
		return u;
		
	}
	
	
	//保存档案号
	@RequestMapping("/cd")
	@ResponseBody
	public String cd(@RequestParam("no")String no,@RequestParam("docNum")String docNum){
		UsUser us = new UsUser();
		us.setUserNo(no);
		us.setDocNum(docNum);
		int count = usUsersControl.cd(us);
		System.out.println(count);
		if (count>0) {
			return "存档成功!";
		}else{
			return "存档失败!";
		}
	}
	
	
	
	

}
